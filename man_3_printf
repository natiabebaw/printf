.TH man 3 "15 April 2022" "ver 1.0" "_printf man page"
.SH NAME
.B _printf
\- print formatted output
.SH SYNOPSIS
#include "main.h"
.TP
#include <stdarg.h>
.B int _printf
.I (const char *format, ...)
.SH DESCRIPTION
The function produces output according to a format as  described  below and writes output to stdout, the standard output stream.
The function  writes the output under the control of a format string that specifies how subsequent arguments (or  arguments  accessed via the variable-length argument facilities of stdarg(3)) are converted for output.
.SH RETURN VALUE
Upon successful return, the function returns the number of characters printed (excluding the null byte used to end output to strings). If an output error is encountered, a negative value is returned.
.SH FORMAT
The format string is a character string, beginning and ending in its initial shift state, if any.  The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments.  Each conversion specification is introduced by the character %, and ends with a conversion specifier.
The arguments must correspond properly (after type promotion) with the conversion specifier.  By default, the arguments are used in the order given, where each conversion specifier asks for the next argument (and it is an error if insufficiently many arguments are given).
.SH CONVERSION SPECIFIERS
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.TP
.B d, i
The int argument is converted to signed decimal notation (int; decimal number).
.TP
.B c
The int argument is converted to an unsigned char, and the resulting character is written (int; single character).
.TP
.B s
The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating null byte ('\0'); the array must contain a terminating null byte (char *; prints characters from a string until a '\0' is reached).
.TP
.B %
A '%' is written. No argument is converted. The complete conversion specification is '%%' (Prints a literal % character (this type doesn't accept any flags, width, precision, length fields)).
.SH SEE ALSO
.I printf(3), printf(1)
.SH NOTE
The '...' in the prototype declaration of _printf() is known as 'ellipsis' and it indicates that the function can have variable number of arguments.
.SH BUGS
No known bugs.
.SH AUTHOR
@DigitalCrood7 and @SEBLEWONGELG
